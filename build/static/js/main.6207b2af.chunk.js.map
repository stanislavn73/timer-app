{"version":3,"sources":["App.js","stores/TimerStore.js","index.js"],"names":["App","observer","timerStore","className","display","onClick","startStopTimer","wait","reset","addZero","n","startTime","dayjs","isTicking","seconds","waiting","doubleClick","makeAutoObservable","this","stopTimer","subtract","measure","setTimeout","diff","hours","Math","floor","minutes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAeeA,EAbHC,aAAS,YAAqB,IAAlBC,EAAiB,EAAjBA,WAEtB,OACE,sBAAKC,UAAU,gBAAf,UACE,0CACA,4BAAID,EAAWE,UACf,wBAAQC,QAAS,kBAAMH,EAAWI,kBAAlC,wBACA,wBAAQD,QAAS,kBAAMH,EAAWK,QAAlC,kBACA,wBAAQF,QAAS,kBAAMH,EAAWM,SAAlC,yB,qCCPN,SAASC,EAAQC,GACf,OAAIA,GAAK,GACAA,EAGD,IAAN,OAAWA,GAIR,ICNHR,EAAa,IDMjB,WACE,aAAe,yBAIfS,UAAYC,MAJE,KAKdC,WAAY,EALE,KAMdC,QAAU,EANI,KAOdC,SAAU,EAPI,KAQdC,aAAc,EAPZC,YAAmBC,MAFvB,kDAWE,WACMA,KAAKL,UAAaK,KAAKC,aAErBD,KAAKH,SACPG,KAAKH,SAAU,EACfG,KAAKP,UAAYC,MAAQQ,SAASF,KAAKJ,QAAS,WAEhDI,KAAKP,UAAYC,MAEnBM,KAAKL,WAAY,EACjBK,KAAKG,aArBX,kBAyBE,WAAQ,IAAD,OACDH,KAAKF,aACPE,KAAKH,SAAU,EACfG,KAAKL,WAAY,GAEjBK,KAAKF,YAAcM,YAAW,WAC5B,EAAKN,aAAc,IAClB,OAhCT,mBAoCE,WACEE,KAAKP,UAAYC,QArCrB,uBAwCE,WACEM,KAAKL,WAAY,EACjBK,KAAKP,UAAYC,MACjBM,KAAKJ,QAAU,IA3CnB,qBA8CE,WAAW,IAAD,OACHI,KAAKL,YACVK,KAAKJ,QAAUF,MAAQW,KAAKL,KAAKP,UAAW,UAC5CW,YAAW,kBAAM,EAAKD,YAAW,QAjDrC,mBAoDG,WACC,IAAIG,EAAQC,KAAKC,MAAMR,KAAKJ,QAAU,MAClCa,EAAUF,KAAKC,MAAMR,KAAKJ,QAAU,IACpCA,EAAUI,KAAKJ,QAAU,GAC7B,MAAM,GAAN,OAAUL,EAAQe,GAAlB,YAA4Bf,EAAQkB,GAApC,YAAgDlB,EAAQK,QAxD5D,MCJAc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK5B,WAAYA,MAEnB6B,SAASC,eAAe,W","file":"static/js/main.6207b2af.chunk.js","sourcesContent":["import { observer } from \"mobx-react-lite\";\n\nconst App = observer(({ timerStore }) => {\n\n  return (\n    <div className='app_container'>\n      <p>Timer App</p>\n      <p>{timerStore.display}</p>\n      <button onClick={() => timerStore.startStopTimer()} >Start/Stop</button>\n      <button onClick={() => timerStore.wait()}>Wait</button>\n      <button onClick={() => timerStore.reset()} >Reset</button>\n    </div>\n  );\n})\n\nexport default App;\n","import dayjs from 'dayjs';\r\nimport { computed, makeAutoObservable } from 'mobx';\r\n\r\nfunction addZero(n) {\r\n  if (n >= 10) {\r\n    return n\r\n  }\r\n  else {\r\n    return `0${n}`\r\n  }\r\n}\r\n\r\nexport class TimerStore {\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  startTime = dayjs()\r\n  isTicking = false\r\n  seconds = 0\r\n  waiting = false\r\n  doubleClick = false\r\n\r\n  startStopTimer() {\r\n    if (this.isTicking) { this.stopTimer() }\r\n    else {\r\n      if (this.waiting) {\r\n        this.waiting = false\r\n        this.startTime = dayjs().subtract(this.seconds, 'second');\r\n      } else {\r\n        this.startTime = dayjs();\r\n      }\r\n      this.isTicking = true;\r\n      this.measure();\r\n    }\r\n  }\r\n\r\n  wait() {\r\n    if (this.doubleClick) {\r\n      this.waiting = true\r\n      this.isTicking = false\r\n    } else {\r\n      this.doubleClick = setTimeout(() => {\r\n        this.doubleClick = false\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.startTime = dayjs()\r\n  }\r\n\r\n  stopTimer() {\r\n    this.isTicking = false\r\n    this.startTime = dayjs()\r\n    this.seconds = 0\r\n  }\r\n\r\n  measure() {\r\n    if (!this.isTicking) return;\r\n    this.seconds = dayjs().diff(this.startTime, 'second');\r\n    setTimeout(() => this.measure(), 1000);\r\n  }\r\n\r\n   get display() {\r\n    let hours = Math.floor(this.seconds / 3600)\r\n    let minutes = Math.floor(this.seconds / 60)\r\n    let seconds = this.seconds % 60\r\n    return `${addZero(hours)}:${addZero(minutes)}:${addZero(seconds)}`\r\n  }\r\n\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { TimerStore } from './stores/TimerStore';\n\nlet timerStore = new TimerStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App timerStore={timerStore} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}